To create our own model we simply create a folder named as "models" in our lib folder. Then we create different files for different models.

title: Text(notes[index].title ?? ""),
it means if the value of notes[index].title is null then take right hand side value i.e empty string.

HOW TO NAVIGATE FROM ONE PAGE TO ANOTHER
(you can refer vid no 7 from 1:36:00 as well)
Forward navigation => Navigator.push(context,MaterialPageRoute(builder: (context) => const AddNotePage()));
When a route is pushed to ask the user for a value, the value can be returned via the [pop] method's result parameter.
Methods that push a route return a [Future]. The Future resolves when the route is popped and the [Future]'s value is the [pop] method's result parameter.

Backward navigation => Navigator.pop(context) 
{you can also send date just by passing second argument in pop() and that will be accessable in previous page from where you called that page.}

We also saw async() function.

In this vid we saw the following widgets and properties
1) OutlineInputBorder()
    This is the value for focusedBorder property of InputDecoration() widget
    focusedBorder property is used to decorate the border on input field when it is focused.

2) IconButton()

3) controller:
    property of TextField()
    To control the text that is displayed in the text field, use the controller.

4) TextEditingController()

5) onChanged:
    in TextField()

6) FocusNode()
    used in TextField()

7) focusNode:
    property of FocusNode()

8) Material()

9) ClipOval()

10) Card()

11) margin: const EdgeInsets.only(top: 20.0),

12) ListTile()

13) overflow: TextOverflow.ellipsis,
    in Text()

14) floatingActionButton:
    property of AppBar()